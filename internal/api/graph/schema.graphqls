# GraphQL schema example
#
# https://gqlgen.com/getting-started/
directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# new directive
directive @auth on FIELD_DEFINITION

scalar Any
scalar Time
scalar DateTime

type User {
  id: ID!
  name: String!
  email: String!
}

input NewUser {
  name: String!
  email: String!
  password: String!
}

type Tiger {
  id: ID!
  name: String!
  dateOfBirth: Time!
  lastSeenTime: Time!
  lastSeenCoordinate:LastSeenCoordinate!
}

type LastSeenCoordinate {
  latitude: Float!
  longitude: Float!
}

input TigerInput {
  name: String!
  dateOfBirth: Time!
  lastSeenTime: Time!
  lastSeenCoordinate: LastSeenCoordinateInput!
}

input LastSeenCoordinateInput {
  latitude: Float!
  longitude: Float!
}

type AuthOps {
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewUser!): Any! @goField(forceResolver: true)
}

type Query {
  user(id: ID!): User! @goField(forceResolver: true)

  # Add Protected Resource
  protected: String! @goField(forceResolver: true) @auth
}

type Mutation {
  auth: AuthOps! @goField(forceResolver: true)
  createTiger(input: TigerInput!): Tiger! @goField(forceResolver: true) @auth
}